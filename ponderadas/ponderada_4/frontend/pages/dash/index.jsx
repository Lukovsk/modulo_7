import Head from "next/head";
import Image from "next/image";
import styles from "../../styles/Home.module.css";
import { useEffect, useState } from "react";
import Cookies from "js-cookie";
import axios from "axios";
import vercelLogo from "../../public/vercel.svg";

export default function Home() {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(false);
  const [todoTitle, setTitle] = useState("");
  const [todoContent, setContent] = useState("");

  let changeHandlerTitle = (event) => {
    setTitle(event.target.value);
  };
  let changeHandlerContent = (event) => {
    setContent(event.target.value);
  };

  let addTodo = async (event) => {
    setLoading(true);
    event.preventDefault();

    const token = Cookies.get("token");
    const user_id = parseInt(Cookies.get("author"));

    const taskData = {
      title: todoTitle,
      content: todoContent,
      user_id: user_id,
    };
    try {
      axios
        .post("http://localhost:8000/task/create", taskData, {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        })
        .then((response) => {
          console.log(response.data);
          loadTodos();
        });
    } catch (error) {
      console.log("Erro na solicitação:", error);
    }
  };

  let removeTodo = async (todo_id) => {
    try {
      setLoading(true);
      const token = Cookies.get("token");
      await axios
        .delete(`http://localhost:8000/task/delete/${todo_id}`, {
          headers: {
            Authorization: "Bearer " + token,
          },
        })
        .then(() => loadTodos());
    } catch (error) {
      console.log("Erro ao pegar a resposta: ", error);
    }
  };

  let loadTodos = async () => {
    try {
      await axios.get("http://localhost:8000/task").then((data) => {
        console.log(data.data);
        setData(data.data);
        setLoading(false);
      });
    } catch (error) {
      console.log("Erro ao pegar a resposta: ", error);
    }
  };

  useEffect(() => {
    setLoading(true);
    loadTodos();
  }, []);

  if (!data) return "Loading...";

  return (
    <div className={styles.container}>
      <Head>
        <title>Next.js TODO APP</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.grid}>
          <h1 className={styles.title}>
            TODO App
            <br />
          </h1>
          {loading ? (
            <a href="#" className={styles.card}>
              <Image src={vercelLogo} alt="Vercel sla" />
            </a>
          ) : (
            <form className={styles.cardForm} onSubmit={addTodo}>
              <input
                className={styles.cardInputTitle}
                type="text"
                name="todo"
                onChange={changeHandlerTitle}
                placeholder="Title Todo Item!"
              />
              <input
                className={styles.cardInput}
                type="text"
                name="todo"
                onChange={changeHandlerContent}
                placeholder="Enter your exciting TODO item!"
              />
              <input type="submit" />
            </form>
          )}
          {data.map((task, idx) => (
            <a
              key={idx}
              href="#"
              onClick={() => removeTodo(task.id)}
              className={styles.card}
            >
              <h2>{task.title}</h2>
              <p>{task.content}</p>
            </a>
          ))}
        </div>
      </main>
    </div>
  );
}
